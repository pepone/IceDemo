 
//----------------------
// <auto-generated>
//     AWSOA.Core.CodeGeneration
// </auto-generated>
//----------------------
#pragma once
// Includes for Domain types
#include <Ice/BuiltinSequences.ice>

module AWSOA {
    module Core {
        module Contracts {
            module DataTransferObject {
                /** 
                 * Forward declaration of a Decimal DTO Type
                **/
                class DecimalDto;

                /** 
                 * Forward declaration of a Guid DTO Type
                **/
                class GuidDto;

                /** 
                 * Forward declaration of a DateTime DTO Type
                **/
                class DateTimeDto;

                /** 
                 * Forward declaration of a Timespan DTO Type
                **/
                class TimeSpanDto;
                
                /** 
                 * Forward declaration of a Image DTO Type
                **/
                class ImageDto;

                /** 
                 * Forward declaration of a Object Type
                **/
                class ObjectDto;

                /** 
                 * Forward declaration of a Filter descriptor
                **/
                class FilterDescriptorDto;

                /** 
                 * Forward declaration of a Data request
                **/
                class DataSourceRequestDto;

                /** 
                 * Forward declaration of a Version
                **/
                class VersionDto;

                /** 
                 * Forward declaration of a Culture Text
                **/
                class CultureTextDto;

                /** 
                 * Forward declaration of a DatabaseConnectionInformation
                **/
                class CoreDatabaseConnectionInformationDto;

                /** 
                 * Forward declaration of a PasswordPolicyResultDto
                 **/
                class PasswordPolicyResultDto;
            };
        }; 
    };
};
module AW{
    module Clarity{
		module PatternViewer{
			module Contracts{
				module DataTransferObject {                   
					/** 
						* Defect Sequence and Result
						**/
					class DefectDto;
					["clr:generic:List"]
					sequence<DefectDto> DefectDtoSeq;
					["clr:property"]
					class DefectDtoResult
					{
						DefectDtoSeq Data;
						int Total;
					};

					/**
					* FooterInformation Sequence and Result
					**/
					class FooterInformationDto;
					["clr:generic:List"]
					sequence<FooterInformationDto> FooterInformationDtoSeq;
					["clr:property"]
					class FooterInformationDtoResult
					{
						FooterInformationDtoSeq Data;
						int Total;
					};

					/**
					* TextRow Sequence and Result
					**/
					class TextRowDto;
					["clr:generic:List"]
					sequence<TextRowDto> TextRowDtoSeq;
					["clr:property"]
					class TextRowDtoResult
					{
						TextRowDtoSeq Data;
						int Total;
					};

					/**
					* TextColumn Sequence and Result
					**/
					class TextColumnDto;
					["clr:generic:List"]
					sequence<TextColumnDto> TextColumnDtoSeq;
					["clr:property"]
					class TextColumnDtoResult
					{
						TextColumnDtoSeq Data;
						int Total;
					};

					/**
					* HeaderInformation Sequence and Result
					**/
					class HeaderInformationDto;
					["clr:generic:List"]
					sequence<HeaderInformationDto> HeaderInformationDtoSeq;
					["clr:property"]
					class HeaderInformationDtoResult
					{
						HeaderInformationDtoSeq Data;
						int Total;
					};

					/** 
						* Line Sequence and Result
						**/
					class LineDto;
					["clr:generic:List"]
					sequence<LineDto> LineDtoSeq;
					["clr:property"]
					class LineDtoResult
					{
						LineDtoSeq Data;
						int Total;
					};

					/** 
                     * Logo Sequence and Result
                     **/
                    class LogoDto;
                    ["clr:generic:List"]
                    sequence<LogoDto> LogoDtoSeq;
                    ["clr:property"]
                    class LogoDtoResult
                    {
                        LogoDtoSeq Data;
                        int Total;
                    };

                    /** 
                     * LogoPosition Sequence and Result
                     **/
                    class LogoPositionDto;
                    ["clr:generic:List"]
                    sequence<LogoPositionDto> LogoPositionDtoSeq;
                    ["clr:property"]
                    class LogoPositionDtoResult
                    {
                        LogoPositionDtoSeq Data;
                        int Total;
                    };

					/** 
						* Pattern Sequence and Result
						**/
					class PatternDto;
					["clr:generic:List"]
					sequence<PatternDto> PatternDtoSeq;
					["clr:property"]
					class PatternDtoResult
					{
						PatternDtoSeq Data;
						int Total;
					};

					/** 
						* PatternRectangle Sequence and Result
						**/
					class PatternRectangleDto;
					["clr:generic:List"]
					sequence<PatternRectangleDto> PatternRectangleDtoSeq;
					["clr:property"]
					class PatternRectangleDtoResult
					{
						PatternRectangleDtoSeq Data;
						int Total;
					};

					/** 
						* Rectangle Sequence and Result
						**/
					class RectangleDto;
					["clr:generic:List"]
					sequence<RectangleDto> RectangleDtoSeq;
					["clr:property"]
					class RectangleDtoResult
					{
						RectangleDtoSeq Data;
						int Total;
					};

					/** 
						* Sheet Sequence and Result
						**/
					class SheetDto;
					["clr:generic:List"]
					sequence<SheetDto> SheetDtoSeq;
					["clr:property"]
					class SheetDtoResult
					{
						SheetDtoSeq Data;
						int Total;
					};

					/** 
						* Define a Point2D Dto sequence
					**/
					class Point2DDto;
					["clr:generic:List"]
					sequence<Point2DDto> Point2DDtoSeq;
					["clr:property"]
					class Point2DDtoResult
					{
						Point2DDtoSeq Data;
						int Total;
					};

					/** 
						* Define a Rectangle2D Dto sequence
					**/
					class Rectangle2DDto;
					["clr:generic:List"]
					sequence<Rectangle2DDto> Rectangle2DDtoSeq;
					["clr:property"]
					class Rectangle2DDtoResult
					{
						Rectangle2DDtoSeq Data;
						int Total;
					};


					/** 
						* Define a string sequence
					**/
					["clr:generic:List"]
					sequence<string> StringDtoSeq;
                    
					/** 
						* Define a int sequence
					**/
					["clr:generic:List"]
					sequence<int> IntDtoSeq;
                    
					/** 
						* Define a double sequence
					**/
					["clr:generic:List"]
					sequence<double> DoubleDtoSeq;

					/** 
						* Define a Guid Dto sequence
					**/
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::GuidDto> GuidDtoSeq;

					/** 
						* Define a Date Time Dto sequence
					**/
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::DateTimeDto> DateTimeDtoSeq;

					/** 
						* Define a Time Span Dto sequence
					**/
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::TimeSpanDto> TimeSpanDtoSeq;

					/** 
						* Define a image Dto sequence
					**/
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::ImageDto> ImageDtoSeq;

					/** 
						* Define a Culture text Dto sequence
					**/
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::CultureTextDto> CultureTextDtoSeq;				

					/** 
						* Define a object
					**/
					dictionary<string, string> ObjectMap;
                    
					["clr:generic:List"]
					sequence<AWSOA::Core::Contracts::DataTransferObject::FilterDescriptorDto> FilterDescriptorDtoSeq;

					/** 
						* Define a Attribute dictionary
					**/
					dictionary<string, AWSOA::Core::Contracts::DataTransferObject::ObjectDto> AttributeMap;
				};
				module Interfaces {

					/** 
						* Define a CommunicationException Type
					**/
					["cs:attribute:System.Runtime.CompilerServices.CompilerGeneratedAttribute"]
					exception CommunicationException {  
						int		ErrorCode;  
						string	Message;
						string  InnerTypeNameSpace;
						string	InnerTypeName;
						string	InnerTypeAssembly;
					}; 

					interface ServiceBase {
						/**
						* Get the Service Version
						* @returns The service version
						**/
						idempotent AWSOA::Core::Contracts::DataTransferObject::VersionDto GetVersion() throws CommunicationException;

						/**
						* Check if the callback adapter is valid
						* @returns 
						**/
						idempotent bool CallbackIsValid() throws CommunicationException;
					};
				};
			};
        };
    };
};
    
 
